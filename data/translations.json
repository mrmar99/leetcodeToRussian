{
  "1": {
    "title": "Two Sum",
    "rusTitle": "Сумма двух",
    "description": "<p>Даны массив целочисленных значений <code>nums</code> и целое число <code>target</code>, верните индексы двух таких чисел, которые в сумме равны <code>target</code>.</p>\n<p>Учтите, что каждый ввод имеет ровно <strong>одно решение</strong>.\nТакже вы не можете использовать одно и то же число дважды.</p>\n<p>Вы можете вернуть ответ в любом порядке.</p>\n\n<p>&nbsp;</p>\n<strong>Пример 1:</strong>\n<pre><strong>Ввод:</strong> nums = [2,7,11,15], target = 9\n<strong>Вывод:</strong> [0,1]\n<strong>Пояснение:</strong> Так как nums[0] + nums[1] == 9, мы возвращаем [0, 1].</pre>\n\n<strong>Пример 2:</strong>\n<pre><strong>Ввод:</strong> nums = [3,2,4], target = 6\n<strong>Вывод:</strong> [1,2]</pre>\n\n<strong>Пример 3:</strong>\n<pre><strong>Ввод:</strong> nums = [3,3], target = 6\n<strong>Вывод:</strong> [0,1]</pre>\n<p>&nbsp;</p>\n\n<p><strong>Ограничения:</strong></p>\n<ul><li><code>2 <= nums.length <= 10<sup>4</sup></code></li>\n<li><code>-10<sup>9</sup> <= nums[i] <= 10<sup>9</sup></code></li>\n<li><code>-10<sup>9</sup> <= target <= 10<sup>9</sup></code></li>\n<li>Существует только один правильный ответ</li></ul>\n<p><p>&nbsp;</p>\n<strong>Доп. задание:</strong> Можете ли вы придумать алгоритм с временной сложностью менее O(n^2)?</p>"
  },
  "2870": {
    "title": "Minimum Number of Operations to Make Array Empty",
    "rusTitle": "Минимальное количество операций для опустошения массива",
    "description": "<p>Вам дан массив положительных чисел <code>nums</code>, индексированный с 0.</p>\n\n<p>Есть два типа операций, которые вы можете применить к массиву любое количество раз:</p>\n\n<ul><li>Выбрать 2 элемента с одинаковыми значениями и удалить их из массива.</li>\n<li>Выбрать 3 элемента с одинаковыми значениями и удалить их из массива.</li></ul>\n\n<p>Верните минимальное количество операций, необходимое для опустошения массива, либо -1, если это невозможно.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Пример 1:</strong></p>\n<pre><strong>Ввод:</strong> nums = [2,3,3,2,2,4,2,3,4]\n<strong>Вывод:</strong> 4\n<strong>Пояснение:</strong> Мы можем применить следующие операции, чтобы опустошить массив:\n- Применить первую операцию на элементах с индексами 0 и 3. Результирующий массив nums = [3,3,2,4,2,3,4].\n- Применить первую операцию на элементах с индексами 2 и 4. Результирующий массив nums = [3,3,4,3,4].\n- Применить вторую операцию на элементах с индексами 0, 1, и 3. Результирующий массив nums = [4,4].\n- Применить первую операцию на элементах с индексами 0 и 1. Результирующий массив nums = [].\nНаглядно видно, что мы не можем опустошить массив за менее, чем 4 операции.</pre>\n   \n<p><strong>Пример 2:</strong></p>\n<pre><strong>Ввод:</strong> nums = [2,1,2,2,3,3]\n<strong>Вывод:</strong> -1</pre>\n\n<p>&nbsp;</p>\n   \n<p><strong>Ограничения:</strong></p>\n<ul><li><code>2 <= nums.length <= 10<sup>5</code></li></sup>\n<li><code>1 <= nums[i] <= 10<sup>6</code></li></ul></sup>"
  },
  "2125": {
    "title": "Number of Laser Beams in a Bank",
    "rusTitle": "Количество лазерных лучей в банке",
    "description": "<p>В банке активирована охранная система. Вам дан двумерный двоичный массив <code>bank</code> размером <code>m x n</code>, который представляет собой поэтажный план банка. <code>bank[i]</code> представляет собой <code>i<sup>ую</code></sup> строку, содержащую <code>'0'</code> и <code>'1'</code>. <code>'0'</code> означает, что ячейка пуста, а <code>'1'</code> означает, что в ячейке есть охранное устройство.</p>\n \n<p>Между <strong>двумя</strong> охранными устройствами есть <strong>один</strong> лазерный луч, если выполняются <strong>оба условия</strong>:</p>\n \n<ul><li>Два устройства расположены в двух <strong>разных строках</strong>: <code>r<sub>1</code></sub> и <code>r<sub>2</code>,</sub> где <code>r<sub>1</sub> < r<sub>2</code>.</li></sub>\n<li>Для каждой строки <code>i</code>, где <code>r<sub>1</sub> < i < r<sub>2</code>,</sub> нет <strong>охранных устройств</strong> в <code>i<sup>ой</code></sup> строке.</li></ul>\n \n<p>Лазерные лучи независимы, то есть один луч никак не взаимодействует с другим.</p>\n \n<p>Верните <em>общее количество лазерных лучей в банке</em>.</p>\n \n<p>&nbsp;</p>\n \n<p><strong>Пример 1:</strong></p>\n<pre><strong>Ввод:</strong> bank = [\"011001\",\"000000\",\"010100\",\"001000\"]\n<strong>Вывод:</strong> 8\n<strong>Пояснение:</strong> Между каждой из следующих пар устройств имеется один луч. Всего лучей 8:\n * bank[0][1] -- bank[2][1]\n * bank[0][1] -- bank[2][3]\n * bank[0][2] -- bank[2][1]\n * bank[0][2] -- bank[2][3]\n * bank[0][5] -- bank[2][1]\n * bank[0][5] -- bank[2][3]\n * bank[2][1] -- bank[3][2]\n * bank[2][3] -- bank[3][2]\nУчтите, что между устройствами в <code>0<sup>й</code></sup> и в <code>3<sup>й</code></sup> строках лучей нет.\nЭто связано с тем, что <code>2<sup>я</code></sup> строка содержит охранные устройства, что противоречит второму условию.</pre>\n \n<p><strong>Пример 2:</strong></p>\n<pre><strong>Ввод:</strong> bank = [\"000\",\"111\",\"000\"]\n<strong>Вывод:</strong> 0\n<strong>Пояснение:</strong> Не существует двух устройств, расположенных в двух разных строках.</pre>\n \n<p>&nbsp;</p>\n \n<p><strong>Ограничения:</strong></p>\n<ul><li><code>m == bank.length</code></li>\n<li><code>n == bank[i].length</code></li>\n<li><code>1 <= m, n <= 500</code></li>\n<li><code>bank[i][j]</code> либо <code>'0'</code>, либо <code>'1'</code>.</li></ul>"
  },
  "300": {
    "title": "Longest Increasing Subsequence",
    "rusTitle": "Самая длинная возрастающая подпоследовательность",
    "description": "<p>Дан целочисленный массив <code>nums</code>, верните <em>длину самой длинной <strong>строго возрастающей <span data-keyword='subsequence-array' class='cursor-pointer relative text-dark-blue-s text-sm'>подпоследовательности</span></strong></em>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Пример 1:</strong></p>\n<pre><strong>Ввод:</strong> nums = [10,9,2,5,3,7,101,18]\n<strong>Вывод:</strong> 4\n<strong>Пояснение:</strong> Самая длинная возрастающая подпоследовательность [2,3,7,101], поэтому длина равна 4.</pre>\n   \n<p><strong>Пример 2:</strong></p>\n<pre><strong>Ввод:</strong> nums = [0,1,0,3,2,3]\n<strong>Вывод:</strong> 4</pre>\n\n<p><strong>Пример 3:</strong></p>\n<pre><strong>Ввод:</strong> nums = [7,7,7,7,7,7,7]\n<strong>Вывод:</strong> 1</pre>\n\n<p>&nbsp;</p>\n   \n<p><strong>Ограничения:</strong></p>\n<ul><li><code>1 <= nums.length <= 2500</code></li>\n<li><code>-10<sup>4</sup> <= nums[i] <= 10<sup>4</code></li></ul></sup>\n\n<p>&nbsp;</p>\n\n<p><strong>Доп. задание:</strong> Можете ли вы придумать алгоритм, временная сложность которого <code>O(n log(n))</code>?</p>"
  },
  "217": {
    "title": "Contains Duplicate",
    "rusTitle": "Содержит дубликат",
    "description": "<p>Дан целочисленный массив <code>nums</code>, верните <code>true</code>, если любое из значений встречается в массиве <strong>как минимум дважды</strong>, иначе верните <code>false</code>, если все значения в массиве различны.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Пример 1:</strong></p>\n<pre><strong>Ввод:</strong> nums = [1,2,3,1]\n<strong>Вывод:</strong> true</pre>\n   \n<p><strong>Пример 2:</strong></p>\n<pre><strong>Ввод:</strong> nums = [1,2,3,4]\n<strong>Вывод:</strong> false</pre>\n\n<p><strong>Пример 3:</strong></p>\n<pre><strong>Ввод:</strong> nums = [1,1,1,3,3,4,3,2,4,2]\n<strong>Вывод:</strong> true</pre>\n\n<p>&nbsp;</p>\n   \n<p><strong>Ограничения:</strong></p>\n<ul><li><code>1 <= nums.length <= 10<sup>5</code></li></sup>\n<li><code>-10<sup>9</sup> <= nums[i] <= 10<sup>9</code></li></ul></sup>"
  },
  "5": {
    "title": "Longest Palindromic Substring",
    "rusTitle": "Самая длинная палиндромная подстрока",
    "description": "<p>Дана строка <code>s</code>, верните <em>самую длинную <span data-keyword='palindromic-string' class='cursor-pointer relative text-dark-blue-s text-sm'>палиндромную</span> <span data-keyword='substring-nonempty' class='cursor-pointer relative text-dark-blue-s text-sm'>подстроку</span></em> в строке <code>s</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Пример 1:</strong></p>\n<pre><strong>Ввод:</strong> s = \"babad\"\n<strong>Вывод:</strong> \"bab\"\n<strong>Пояснение:</strong> \"aba\" тоже является правильным ответом.</pre>\n   \n<p><strong>Пример 2:</strong></p>\n<pre><strong>Ввод:</strong> s = \"cbbd\"\n<strong>Вывод:</strong> \"bb\"</pre>\n\n<p>&nbsp;</p>\n   \n<p><strong>Ограничения:</strong></p>\n<ul><li><code>1 <= s.length <= 1000</code></li>\n<li><code>s</code> содержит только цифры и английские буквы.</li></ul>"
  },
  "1235": {
    "title": "Maximum Profit in Job Scheduling",
    "description": "<p>У нас есть <code>n</code> запланированных заданий, каждое задание нужно выполнить с <code>startTime[i]</code> до <code>endTime[i]</code>, получая прибыль <code>profit[i]</code>.</p>\n\n<p>Вам даны массивы <code>startTime</code>, <code>endTime</code> и <code>profit</code>, верните максимальную прибыль, которую вы можете получить таким образом, чтобы в подмножестве не было двух заданий с перекрывающимися временными диапазонами.</p>\n\n<p>Если вы выберете задание, которое заканчивается во время <code>X</code>, то вы можете начать другое задание, которое начинается во время <code>X</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Пример 1:</strong></p>\n<pre><strong>Ввод:</strong> startTime = [1,2,3,3], endTime = [3,4,5,6], profit = [50,10,40,70]\n<strong>Вывод:</strong> 120\n<strong>Пояснение:</strong> Выбранное подмножество - это первое и четвертое задания. \nВо временных диапазонах [1-3]+[3-6] мы получаем прибыль, равную 120 = 50 + 70.</pre>\n   \n<p><strong>Пример 2:</strong></p>\n<pre><strong>Ввод:</strong> startTime = [1,2,3,4,6], endTime = [3,5,10,6,9], profit = [20,20,100,70,60]\n<strong>Вывод:</strong> 150\n<strong>Пояснение:</strong> Выбранное подмножество - это первое, четвертое и пятое задания.\nПолученная прибыль равна 150 = 20 + 70 + 60.</pre>\n\n<p><strong>Пример 3:</strong></p>\n<pre><strong>Ввод:</strong> startTime = [1,1,1], endTime = [2,3,4], profit = [5,6,4]\n<strong>Вывод:</strong> 6</pre>\n\n<p>&nbsp;</p>\n   \n<p><strong>Ограничения:</strong></p>\n<ul><li><code>1 <= startTime.length == endTime.length == profit.length <= 5 * 10<sup>4</code></li></sup>\n<li><code>1 <= startTime[i] < endTime[i] <= 10<sup>9</code></li></sup>\n<li><code>1 <= profit[i] <= 10<sup>4</code></li></ul></sup>",
    "rusTitle": "Максимальная прибыль от запланированных заданий"
  },
  "516": {
    "title": "Longest Palindromic Subsequence",
    "rusTitle": "Самая длинная палиндромная подпоследовательность",
    "description": "<p>Дана строка <code>s</code>, найдите длину <em>самой длинной палиндромной <strong>подпоследовательности</strong></em> в <code>s</code>.</p><p><strong>Подпоследовательность</strong> - это последовательность, которую можно получить из другой последовательности путем удаления от <code>0</code> до <code>s.length</code> элементов без изменения порядка элементов.</p><p>&nbsp;</p><p><strong>Пример 1:</strong></p><pre><strong>Ввод:</strong> s = \"bbbab\"<strong>Вывод:</strong> 4<strong>Пояснение:</strong> \"bbbb\" является самой длинной палиндромной подпоследовательностью.</pre>   <p><strong>Пример 2:</strong></p><pre><strong>Ввод:</strong> s = \"cbbd\"<strong>Вывод:</strong> 2<strong>Пояснение:</strong> \"bb\" является самой длинной палиндромной подпоследовательностью.</pre><p>&nbsp;</p>   <p><strong>Ограничения:</strong></p><ul><li><code>1 <= s.length <= 1000</code></li><li><code>s</code> состоит только из строчных английских букв.</li></ul>"
  }
}
